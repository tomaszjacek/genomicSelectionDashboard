install.packages('RJDBC')
install.packages('RJDBC')
install.packages('RJDBC')
library(RJDBC)
library(RJDBC)
install.packages('rJava')
library(RJDBC)
library("DBI")
library("rJava")
library("RJDBC")
library("DBI")
library("rJava")
library("RJDBC")
library("RODBC")
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "[Simba Cassandra ODBC Driver 64-bit]",
Host     = "[127.0.0.1]",
Port     = 9042,
Keyspace = "[production]",
AuthMech = 1,
UID      = rstudioapi::askForPassword("Database user"),
PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "[Simba Cassandra ODBC Driver 64-bit]",
Host     = "[127.0.0.1]",
Port     = 9042,
Keyspace = "[production]",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/lib/libcassandraodbc_sb64.so",
Host     = "[127.0.0.1]",
Port     = 9042,
Keyspace = "[production]",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "[127.0.0.1]",
Port     = 9042,
Keyspace = "[production]",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
rlang::last_trace()
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "[ODBC Data Sources]",
Host     = "[127.0.0.1]",
Port     = 9042,
Keyspace = "[production]",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "[ODBC Data Sources]",
Host     = "[127.0.0.1]",
Port     = 9042,
Keyspace = "[production]",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "[Simba Cassandra 64-bit]",
Host     = "[127.0.0.1]",
Port     = 9042,
Keyspace = "[production]",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
rlang::last_trace()
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "Simba Cassandra 64-bit",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production",
AuthMech = 1
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production"
#AuthMech = 1,
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production"
#AuthMech = 1,
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production",
AuthMech = 1,
UID = "",
PWD = ""
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production",
AuthMech = 1,
UID = "cassandra",
PWD = "cassandra"
# UID      = rstudioapi::askForPassword("Database user"),
# PWD      = rstudioapi::askForPassword("Database password")
)
#library("DBI")
#library("rJava")
#library("RJDBC")
library("RODBC")
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production",
AuthMech = 1,
UID = "cassandra",
PWD = "cassandra"
)
data <- dbGetQuery(con, "SELECT * FROM production.pedigree LIMIT 10")
print(data)
library("DBI")
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production",
AuthMech = 1,
UID = "cassandra",
PWD = "cassandra"
)
data <- dbGetQuery(con, "SELECT * FROM production.pedigree LIMIT 10")
print(data)
install.packages("shiny")
library('shiny')
runExample('01_hello')
devtools::install_github('rstudio/DT')
install.packages('devtools')
library(shiny); runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
devtools::install_github('rstudio/DT')
library('devtools')
devtools::install_github('rstudio/DT')
library('devtools')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
devtools::install_github('rstudio/DT')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
runApp('work/github/genomicSelectionDashboard/testApp_googleLikeForm.R')
install.packages("magrittr")
install.packages("remotes")
install.packages("httl")
install.packages("glue")
install.packages("dplyr")
install.packages("purrr")
remotes::install_github("r-world-devs/shinyGizmo",ref="dev")
library(shiny); runApp('work/github/genomicSelectionDashboard/exercises/testApp_dataGenerator.R')
runApp('work/github/genomicSelectionDashboard/exercises/testApp_dataGenerator.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex1.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex1.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex2.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex2.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex2.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex2.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex2.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex2.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
install.packages('glue')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
head(iris)
head(iris3)
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
iris[1:input$nrow,]
iris[1:10,]
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
nrow(iris)
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
insertUI(
selector = "#variables",
where = "beforeEnd",
ui = column_ui(id,input$name),
immediate=TRUE
)
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/shiny_conference_2022')
library(shiny); runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/shiny_conference_2022/04_00_app.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
ns <- NS("DUPA")
ns()
ns("id")
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex4.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6_withModules.R')
library("DBI")
#library("rJava")
#library("RJDBC")
library("RODBC")
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "/usr/lib/libcassandraodbc_sb64.so",
Host     = "127.0.0.1",
Port     = 9042,
Keyspace = "production",
AuthMech = 1,
UID = "cassandra",
PWD = "cassandra"
)
data <- dbGetQuery(con, "SELECT * FROM production.pedigree LIMIT 10")
print(data)
odbc::sqlCreateTable(con,"eko",data)
createTable<-"CREATE TABLE eko_sets(UUID UUID, GEN text, LINE text, WB float, LOCATION text, HATCH text, SIRE text, DAM text, FEATHER text, EQ_DATE date, SETNO float, LAYAGE float, ORIGIN text, SNP_FMO3 text, STATION text, MAIN_KEY text, DEFECTS text, PS float, E3 float, C3 float, Y3 float, BL float, MT float, EW float, YPCT float, EW1 float, EW2 float, EW3 float, CRACK float, KDYN float, KDYN1 float, KDYN2 float, KDYN3 float, BS float, BS1 float, BS2 float, BS3 float, BSPO float, BSPO1 float, BSPO2 float, BSPO3 float, AH float, AH1 float, AH2 float, AH3 float, CO float, CO1 float, CO2 float, CO3 float, YW float, YW1 float, YW2 float, YW3 float, SP float, SP1 float, SP2 float, SP3 float, PRIMARY KEY ((GEN,LINE),MAIN_KEY,UUID,LAYAGE));"
odbc::dbExecute(createTable)
odbc::dbExecute(con,createTable)
createTable<-"CREATE TABLE production.eko_sets(UUID UUID, GEN text, LINE text, WB float, LOCATION text, HATCH text, SIRE text, DAM text, FEATHER text, EQ_DATE date, SETNO float, LAYAGE float, ORIGIN text, SNP_FMO3 text, STATION text, MAIN_KEY text, DEFECTS text, PS float, E3 float, C3 float, Y3 float, BL float, MT float, EW float, YPCT float, EW1 float, EW2 float, EW3 float, CRACK float, KDYN float, KDYN1 float, KDYN2 float, KDYN3 float, BS float, BS1 float, BS2 float, BS3 float, BSPO float, BSPO1 float, BSPO2 float, BSPO3 float, AH float, AH1 float, AH2 float, AH3 float, CO float, CO1 float, CO2 float, CO3 float, YW float, YW1 float, YW2 float, YW3 float, SP float, SP1 float, SP2 float, SP3 float, PRIMARY KEY ((GEN,LINE),MAIN_KEY,UUID,LAYAGE));"
odbc::dbExecute(con,createTable)
library(shiny); runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex7.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex5.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex6.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex1.R')
runApp('work/github/genomicSelectionDashboard/exercises/ex3.R')
runApp('ex3.R')
runApp('work/github/hylGS')
runApp('work/github/hylGS')
runApp('work/github/hylGS')
shiny::runApp('work/github/hylGS')
setwd("/home/jach/work/github/hylGS/")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
dir
ls
getwd()
runApp()
library(rhino)
install.packages("rhino")
getwd()
setwd("/home/jach/work/github/genomicSelectionDashboard/projectR")
getwd()
rhino::init()
shiny:runApp()
install.packages('shiny')
install.packages('rhino')
install.packages('reactable')
install.packages('echarts4r')
install.packages('dplyr')
install.packages('tidyr')
install.packages('htmlwidgets')
renv::snapshot()
runApp()
.libPaths()
renv::install("shinydashboard")
source("~/work/github/genomicSelectionDashboard/projectR/app/main.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
box::use(
shiny[bootstrapPage, div, moduleServer, NS, renderUI, tags, uiOutput,fluidPage,sidebarLayout,sidebarPanel,h3,numericInput,textOutput,textInput,conditionalPanel,actionButton,icon,mainPanel],
)
runApp()
runApp()
renv::install("shinycssloaders")
renv::snapshot()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
box::use(
#app/view/cassandra/cassandra_panel_Ui,
#app/view/cassandra/cassandra_panel_Server,
app/view/git/git_panel_Ui,
app/view/git/git_panel_Server
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
